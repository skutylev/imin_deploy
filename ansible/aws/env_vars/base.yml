---
# Environment specific variables
COMPANY: naviworld
ENVIRONMENT: dev
SERVER_ROLE: web

# Ubuntu AMI base image from packer
#AMI_NAME: "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*"
#AMI_OWNER: "099720109477"

# EC2 instances specific variables
EC2_INSTANCE_TYPE: t2.micro
EC2_SECURITY_GROUP_NAME:
  - "{{ VPC_NAME }}-{{ SSH_SG_NAME }}"
  - "{{ VPC_NAME }}-{{ WEB_SG_NAME }}"
EC2_VOLUME_SIZE: 10
EC2_COUNT: 1
EC2_SUBNET_ID:
  - "{{ PUBLIC_SUBNET_1 }}"
  - "{{ PUBLIC_SUBNET_2 }}"

# Elastic Load Balancer specific variables
ELB_NAME: "{{ COMPANY }}-{{ ENVIRONMENT }}-{{ SERVER_ROLE }}-elb"
ELB_SUBNET_ID:
  - "{{ PUBLIC_SUBNET_1 }}"
  - "{{ PUBLIC_SUBNET_2 }}"
ELB_PURGE_SUBNETS: yes
ELB_CROSS_AZ_LOAD_BALANCING: yes
ELB_PING_PROTOCOL: tcp
ELB_PING_PORT: 80
ELB_RESPONSE_TIMEOUT: 5
ELB_INTERVAL: 30
ELB_UNHEALTHY_THRESHOLD: 2
ELB_HEALTHY_THRESHOLD: 10
ELB_CONNECTION_DRAINING_TIMEOUT: 60
ELB_SECURITY_GROUP_NAME: "{{ VPC_NAME }}-{{ ELB_SG_NAME }}"
ELB_LISTENERS:
  - protocol: http
    load_balancer_port: 80
    instance_protocol: http
    instance_port: 80
  - protocol: https
    load_balancer_port: 443
    instance_protocol: http
    instance_port: 443
    ssl_certificate_id: "arn:aws:iam::xxxxxxxxxxxx:server-certificate/navi-crt"

# EC2 Security Groups specific variables
WEB_SG_NAME: "webserver-sg"
SSH_SG_NAME: "ssh-sg"
ELB_SG_NAME: "elb-sg"

# Security Groups
EC2_SECURITY_GROUPS: "{{ SSH_SG + WEB_SG  + ELB_SG }}"

# Secrity Groups info(Name, Description and Rules) for Web, RDS and ELB
SSH_SG:
  - name: "{{ VPC_NAME }}-{{ SSH_SG_NAME }}"
    description: "This sg is for remote access to instances inside {{ VPC_NAME }} VPC"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0

WEB_SG:
  - name: "{{ VPC_NAME }}-{{ WEB_SG_NAME }}"
    description: "This sg is for web instances inside {{ VPC_NAME }} VPC"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0

ELB_SG:
  - name: "{{ VPC_NAME }}-{{ ELB_SG_NAME }}"
    description: "This sg is for ELB inside {{ VPC_NAME }} VPC"
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0

AWS_NAME: "navi-web"
AWS_REGION: "eu-east-1"
AWS_AVAILABILITY_ZONES: '"us-east-1a" "us-east-1b"'
AWS_AMI_IMAGE: "id"
AWS_INSTANCE_TYPE: "t1.micro"
AWS_SG: "navi_web"
AWS_ELB: "{{ AWS_NAME }}-elb"
AWS_VPC_ZONE: ""
AWS_SUBNETS: ""
AWS_IAM_PROFILE: "navi_web"
AWS_SSH_KEY: "navi_web"

AWS_ELB_LISTENERS:
  - protocol: http
    load_balancer_port: 80
    instance_protocol: http
    instance_port: 80
  - protocol: https
    load_balancer_port: 443
    instance_protocol: http
    instance_port: 443
    ssl_certificate_id: "arn:aws:iam::xxxxxxxxxxxx:server-certificate/navi-crt"

AWS_ELB_HEALTH_CHECK:
        ping_protocol: http # options are http, https, ssl, tcp
        ping_port: 80
        ping_path: "/about" # not required for tcp or ssl
        response_timeout: 5 # seconds
        interval: 30 # seconds
        unhealthy_threshold: 2
        healthy_threshold: 10