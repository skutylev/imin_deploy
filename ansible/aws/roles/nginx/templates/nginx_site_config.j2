upstream wsgi_server {
# fail_timeout=0 means we always retry an upstream even if it failed
# to return a good HTTP response (in case the Unicorn master nukes a
# single worker for timing out).
    server 127.0.0.1:8000;
#server unix:{{ virtualenv_path }}/run/gunicorn.sock fail_timeout=0;
}

server {
    listen      80;
    server_name {{ nginx_server_name }};
    rewrite     ^ https://$server_name$request_uri? permanent;
}

server {
    listen                      443;
    server_name                 {{ nginx_server_name }};
    add_header                  Strict-Transport-Security   'max-age=31536000; includeSubDomains';
    add_header                  Public-Key-Pins             'pin-sha256="6X0iNAQtPIjXKEVcqZBwyMcRwq1yW60549axatu3oDE="; max-age=31536000';
    add_header                  X-Frame-Options             DENY;
    add_header                  X-Content-Type-Options      nosniff;
    proxy_set_header            Host             $host;
    proxy_set_header            X-Real-IP        $remote_addr;
    proxy_set_header            X-Forwarded-For  $proxy_add_x_forwarded_for;
    ssl                         on;
    ssl_certificate             {{ ssl_dest_dir }}/{{ application_name }}.crt;
    ssl_certificate_key         {{ ssl_dest_dir }}/{{ application_name }}.key;
    ssl_trusted_certificate     {{ ssl_dest_dir }}/{{ application_name }}_ca.crt;
    ssl_dhparam                 {{ ssl_dest_dir }}/{{ application_name }}_dh4096.crt;
    keepalive_timeout           70;
    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
    ssl_session_timeout         5m;
    ssl_session_cache           builtin:1000  shared:SSL:10m;
    ssl_stapling                on;
    ssl_stapling_verify         on;
    resolver                    8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout            5s;

    server_name_in_redirect         off;
    charset                         utf-8;

    client_max_body_size 4G;

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};

    location /static/ {
        alias   {{ nginx_static_dir }};
    }

    location /sitemaps/
    {
        alias   {{ application_path }}/app/sitemaps/;
    }

    location /robots.txt
    {
        alias   {{ application_path }}/app/robots.txt;
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
    }

    location /apple-app-site-association {
        alias   {{ application_path }}/app/apple-app-site-association;
    }

    location / {
        if (-f {{ virtualenv_path }}/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://wsgi_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ application_path }}/app/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_path }}/;
    }


}